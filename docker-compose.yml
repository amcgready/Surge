services:
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: surge-radarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Radarr/config:/config
      - ${STORAGE_PATH}/downloads:/downloads
      - ${STORAGE_PATH}/downloads/Radarr:/downloads/Radarr
    ports:
      - "${RADARR_PORT:-7878}:7878"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - radarr

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: surge-sonarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Sonarr/config:/config
      - ${STORAGE_PATH}/downloads:/downloads
      - ${STORAGE_PATH}/downloads/Sonarr:/downloads/Sonarr
    ports:
      - "${SONARR_PORT:-8989}:8989"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - sonarr

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: surge-bazarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Bazarr/config:/config
    ports:
      - "${BAZARR_PORT:-6767}:6767"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - bazarr

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: surge-prowlarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Prowlarr/config:/config
      - ./configs/prowlarr/indexers:/config/Definitions/Custom
    ports:
      - "${PROWLARR_PORT:-9696}:9696"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - prowlarr

  decypharr:
    image: cy01/blackhole:latest
    container_name: surge-decypharr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - RD_API_TOKEN=${RD_API_TOKEN}
      - AD_API_TOKEN=${AD_API_TOKEN:-}
      - DEBRID_LINK_API_TOKEN=${DEBRID_LINK_API_TOKEN:-}
      - TORBOX_API_TOKEN=${TORBOX_API_TOKEN:-}
    volumes:
      - ${STORAGE_PATH}/Decypharr/config:/app/config
      - ${STORAGE_PATH}/Decypharr/config/config.json:/app/config.json
      - ${STORAGE_PATH}/Decypharr/cache:/mnt/rclone/cache
      - ${STORAGE_PATH}/downloads/Decypharr/debrids:/mnt/rclone/remote
      - /mnt:/mnt
    ports:
      - "${DECYPHARR_PORT:-8282}:8282"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - decypharr
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse:/dev/fuse:rwm
    security_opt:
      - apparmor:unconfined

  posterizarr:
    image: ghcr.io/fscorrupt/posterizarr:latest
    container_name: surge-posterizarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Posterizarr/config:/config
      - ${STORAGE_PATH}/Assets:/assets
      - ${STORAGE_PATH}/Posterizarr/logs:/logs
    ports:
      - "${POSTERIZARR_PORT:-5060}:5060"
    restart: "no"
    networks:
      - surge-network
    profiles:
      - posterizarr

  cinesync:
    image: sureshfizzy/cinesync:latest
    container_name: surge-cinesync
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    ports:
      - "${CINESYNC_PORT:-8082}:8082"
      - "${CINESYNC_DEV_PORT:-5173}:5173"
    volumes:
      - ${STORAGE_PATH}/CineSync/config/.env:/app/.env
      - /mnt:/mnt  # Mount /mnt for access to external storage
      - /home:/home  # Mount home directory to provide access to home files
      - .db:/app/db  # Mount local db folder to persist database files
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - cinesync

  placeholdarr:
    image: ghcr.io/theindiearmy/placeholdarr:queue_monitoring-latest
    container_name: surge-placeholdarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Placeholdarr/config:/config
      - ${STORAGE_PATH}/downloads:/downloads
      - ${STORAGE_PATH}/downloads/CineSync/Movies:/downloads/CineSync/Movies
      - ${STORAGE_PATH}/downloads/CineSync/TV Series:/downloads/CineSync/TV Series
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - placeholdarr

  overseerr:
    image: sctx/overseerr:latest
    container_name: surge-overseerr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Overseerr/config:/app/config
    ports:
      - "${OVERSEERR_PORT:-5055}:5055"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - overseerr

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: surge-tautulli
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${STORAGE_PATH}/Tautulli/config:/config
    ports:
      - "${TAUTULLI_PORT:-8182}:8181"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - tautulli

  gaps:
    image: housewrecker/gaps:latest
    container_name: surge-gaps
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - ENABLE_SSL=false
      - ENABLE_LOGIN=false
      - BASE_URL=
    volumes:
      - ${STORAGE_PATH}/GAPS/config:/usr/data
    ports:
      - "8484:8484"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - gaps

  dockupdater:
    image: ghcr.io/dockupdater/dockupdater:latest
    container_name: surge-dockupdater
    environment:
      - WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - dockupdater

  pangolin:
    image: fosrl/pangolin:latest
    container_name: surge-pangolin
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      # Add any Pangolin-specific environment variables here
    volumes:
      - ${STORAGE_PATH}/Pangolin/config:/app/config
      - ${STORAGE_PATH}/Pangolin/public:/app/public
      - ${STORAGE_PATH}/Pangolin/messages:/app/messages
      # Add any Pangolin-specific volumes here
    ports:
      - "3003:3000"
      - "3001:3001"
      - "3002:3002"
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - surge-network
    profiles:
      - pangolin

  kometa:
    image: kometateam/kometa:latest
    container_name: surge-kometa
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes: 
      - ${STORAGE_PATH}/Kometa/config:/config
      - ${STORAGE_PATH}/Assets:/Assets:rw

    networks:
      - surge-network

  riven-frontend:
    image: spoked/riven-frontend:latest
    container_name: riven-frontend
    restart: unless-stopped
    tty: true
    environment:
      - TZ=Etc/UTC
    ports:
      - "3004:3000"
    volumes:
      - ./config/riven:/riven/config # Mount a config directory for Riven frontend
    depends_on:
      riven:
        condition: service_started
    networks:
      - surge-network

  riven:
    image: spoked/riven:latest
    container_name: riven
    restart: unless-stopped
    ports:
      - "8080:8080"
    tty: true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - RIVEN_FORCE_ENV=true
      - RIVEN_DATABASE_HOST=postgresql+psycopg2://postgres:postgres@riven-db/riven
    healthcheck:
      test: curl -s http://localhost:8080 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ./data/riven:/riven/data
      - /mnt:/mnt
    depends_on:
      riven_postgres:
        condition: service_healthy
    networks:
      - surge-network

  riven_postgres:
    image: postgres:17-alpine
    container_name: riven-db
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=riven
    volumes:
      - ./data/riven-db:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - surge-network

networks:
  surge-network:
    name: surge-network

